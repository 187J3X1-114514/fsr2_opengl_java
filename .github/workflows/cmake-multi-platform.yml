# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        include:
          - os: windows-latest
            c_compiler: gcc

    steps:
    - uses: actions/checkout@v4
    - uses: deevroman/setup-mingw@0.0.2

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Configure CMake(FSR2)
      run: cmake -B ${{ steps.strings.outputs.build-output-dir }} -S ${{ github.workspace }} -G"MinGW Makefiles"
    - name: Build(FSR2)
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} -- -i
    - name: Configure CMake(api)
      run: cmake -B ${{ steps.strings.outputs.build-output-dir }} -S ${{ github.workspace }} -G"MinGW Makefiles" -DIGLIBFSR2API=ON
    - name: Build(api)
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: fsr2api-win64
        path: ${{ steps.strings.outputs.build-output-dir }}/../bin
        retention-days: 80
          
            
